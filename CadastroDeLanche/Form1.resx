<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAA//Z
</value>
  </data>
</root>